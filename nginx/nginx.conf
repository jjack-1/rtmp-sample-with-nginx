# alfg/nginx-rtmp 최적화 설정 파일
daemon off;
error_log /dev/stdout info;

# 이벤트 처리 모듈
events {
    worker_connections 1024;
    use epoll;                    # Linux 최적화
}

# RTMP 서버 설정
rtmp {
    server {
        listen 1935;                      # RTMP 입력 포트
        chunk_size 4000;                  # 네트워크 성능 최적화
        
        # ✅ 플러터 앱 호환을 위한 live 애플리케이션
        application live {
            live on;                    # 라이브 스트리밍 활성화
            
            # ✅ FFmpeg 호환성을 위한 올바른 권한 설정
            allow play 127.0.0.1;       # FFmpeg(로컬호스트)만 재생 허용
            deny play all;              # 외부 클라이언트 직접 재생 차단
            
            # ✅ 다중 해상도 FFmpeg 트랜스코딩 (60fps에 맞게 비트레이트 상향 조정)
            exec sh -c '
                # 1. 다중 화질 트랜스코딩을 백그라운드(&)에서 실행합니다.
                ffmpeg -i rtmp://localhost:1935/live/$name \
                    -c:v libx264 -b:v 6000k -maxrate 6000k -bufsize 12000k -vf scale=1920:1080 -r 60 -g 120 -keyint_min 120 -preset fast -profile:v high -level 4.2 -c:a aac -b:a 192k -ar 44100 -ac 2 -f flv rtmp://localhost:1935/hls/${name}_1080p \
                    -c:v libx264 -b:v 4000k -maxrate 4000k -bufsize 8000k -vf scale=1280:720 -r 60 -g 120 -keyint_min 120 -preset superfast -profile:v high -level 4.2 -c:a aac -b:a 128k -ar 44100 -ac 2 -f flv rtmp://localhost:1935/hls/${name}_720p \
                    -c:v libx264 -b:v 1200k -maxrate 1200k -bufsize 2400k -vf scale=854:480 -r 30 -g 60 -keyint_min 60 -preset superfast -profile:v baseline -c:a aac -b:a 128k -ar 44100 -ac 2 -f flv rtmp://localhost:1935/hls/${name}_480p &

                # 2. 썸네일 생성을 1시간 주기로 반복하는 루프를 별도의 백그라운드(&) 프로세스로 실행합니다.
                (while true; do
                    # 2-1. FFmpeg으로 썸네일을 추출합니다.
                    ffmpeg -i rtmp://localhost:1935/live/$name -vframes 1 -vf scale=1280:720 -y /opt/data/thumbnails/$name.jpg && \

                    # 2-2. 썸네일 생성이 성공하면(&&), 스프링 서버에 JSON 형식으로 알림을 보냅니다.
                    # 💡 중요: 아래 YOUR_NGINX_SERVER_IP 와 YOUR_SPRING_SERVER_IP는 실제 환경에 맞게 수정해야 합니다.
                    curl -X PUT \
                            -H "Content-Type: application/json" \
                            -d "{\"thumbnailUrl\":\"http://192.168.0.31/thumbnails/${name}.jpg\"}" \
                            http://192.168.0.31:8080/rtmp/$name/thumbnails;

                    # 2-3. 다음 갱신까지 1시간(3600초) 동안 대기합니다.
                    sleep 3600;
                done) &
            ';
        }
        
        # ✅ HLS 출력 애플리케이션 (FFmpeg 트랜스코딩 결과 수신)
        application hls {
            live on;                      # 라이브 활성화
            
            # 외부 발행 차단 (내부 FFmpeg만 허용)
            allow publish 127.0.0.1;      # 로컬호스트만 허용
            deny publish all;             # 외부 발행 차단
            
            # ✅ HLS 설정 최적화
            hls on;                       # HLS 출력 활성화
            hls_path /opt/data/hls;       # HLS 세그먼트 저장 경로
            hls_fragment 5;               # 5초 세그먼트 (안정성)
            hls_playlist_length 10;       # 10초 플레이리스트 (2개 세그먼트)
            hls_fragment_naming system;   # 시스템 기반 파일명
            hls_nested on;                # 스트림별 디렉토리 생성
            
            # ✅ 다중 화질 변형 정의 (3개 화질 포함)
            hls_variant _1080p BANDWIDTH=6192000,RESOLUTION=1920x1080; # 6000k(비디오) + 192k(오디오)
            hls_variant _720p BANDWIDTH=4128000,RESOLUTION=1280x720;  # 4000k(비디오) + 128k(오디오)
            hls_variant _480p BANDWIDTH=1328000,RESOLUTION=854x480;
        }
    }
}

# HTTP 서버 설정 (HLS 파일 제공)
http {
    # 기본 MIME 타입 설정
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # ✅ 성능 최적화 설정
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    
    # ✅ 로그 설정
    access_log /dev/stdout combined;
    error_log /dev/stdout warn;
    
    server {
        listen 80;                        # HTTP 포트
        
        # ✅ HLS 스트림 제공 (CORS 설정 포함)
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;  # HLS 플레이리스트
                video/mp2t ts;                       # HLS 세그먼트
            }
            
            root /opt/data;               # alfg/nginx-rtmp 기본 경로
            
            # CORS 및 캐시 설정 (웹 플레이어 지원)
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
            add_header Access-Control-Allow-Headers Range;
        }

        # ✅ 썸네일 제공을 위한 경로 (추가됨)
        location /thumbnails {
            root /opt/data;
            expires 7d;
            add_header Access-Control-Allow-Origin *;
        }
        
        # ✅ 편의용 별칭 (선택사항)
        location /live {
            alias /opt/data/hls;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }
        
        # ✅ 서버 상태 모니터링 페이지
        location /stat {
            rtmp_stat all;               # RTMP 통계 표시
            rtmp_stat_stylesheet stat.xsl;
        }
        
        # ✅ 통계 스타일시트
        location /stat.xsl {
            root /www/static;            # alfg/nginx-rtmp 기본 경로
        }
        
        # ✅ crossdomain.xml 지원 (Flash 호환성)
        location /crossdomain.xml {
            default_type text/xml;
            expires 24h;
        }
        
        # ✅ 기본 페이지
        location / {
            root /www/static;
            index index.html;
        }
    }
}
