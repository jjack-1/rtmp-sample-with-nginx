# 전역 설정: Nginx 프로세스를 실행할 사용자 계정 (옵션)
# user www-data; 

# 전역 설정: CPU 코어 수에 맞춰 워커 프로세스를 자동으로 조절
worker_processes auto;

# 전역 설정: 에러 로그 파일 위치
error_log /var/log/nginx/error.log warn;

# 전역 설정: Nginx 프로세스 ID(PID) 파일 위치
pid /var/run/nginx.pid;

# 1. 이벤트 처리 모델 설정 블록
events {
    # 워커 프로세스 당 처리할 수 있는 최대 동시 연결 수
    worker_connections 1024;
}

# 2. RTMP 프로토콜 처리 블록
rtmp {
    server {
        # RTMP 클라이언트가 접속할 포트
        listen 1935;
        
        # 데이터를 한 번에 처리할 크기
        chunk_size 4096;

        # ------------------- 2-1. 원본 스트림 수신 및 트랜스코딩 실행부 -------------------
        # Flutter 앱 등에서 원본(1080p) 스트림을 받는 애플리케이션
        # ------------------- 2-1. 원본 스트림 수신 및 트랜스코딩 실행부 -------------------
        application live {
            live on;
            record off;
            # on_publish http://YOUR_SPRING_BOOT_IP:8080/api/broadcast/start;

            # FFmpeg를 이용한 실시간 트랜스코딩
            # 수신된 원본 스트림을 4개의 화질/프레임레이트 조합으로 변환
            exec /usr/bin/ffmpeg -i rtmp://localhost/live/$name
                # 옵션 1: 1080p 30fps 스트림
                # -profile:v main : HD 화질에 적합한 메인 프로파일 사용
                -c:v libx264 -preset veryfast -profile:v main -s 1920x1080 -r 30 -b:v 3000k -maxrate 3500k -bufsize 6000k 
                -c:a aac -b:a 128k -f flv rtmp://localhost/hls/${name}_1080p

                # 옵션 2: 720p 30fps 스트림
                -c:v libx264 -preset veryfast -profile:v main -s 1280x720 -r 30 -b:v 2000k -maxrate 2500k -bufsize 4000k 
                -c:a aac -b:a 128k -f flv rtmp://localhost/hls/${name}_720p

                # 옵션 3: 480p 30fps 스트림
                # -profile:v baseline : 구형 기기 호환성을 위한 베이스라인 프로파일 사용
                -c:v libx264 -preset veryfast -profile:v baseline -s 854x480 -r 30 -b:v 1000k -maxrate 1200k -bufsize 2000k 
                -c:a aac -b:a 128k -f flv rtmp://localhost/hls/${name}_480p
                >> /var/log/nginx/ffmpeg.log 2>&1;
        }

        # ------------------- 2-2. HLS 변환 및 플레이리스트 생성부 -------------------
        # FFmpeg으로부터 트랜스코딩된 스트림들을 받아 HLS로 최종 변환하는 애플리케이션
        application hls {
            live on;
            hls on;
            hls_path /tmp/hls;
            hls_fragment 3s;
            hls_playlist_length 60s;

            # 적응형 비트레이트 스트리밍을 위한 화질별 Variant 설정
            # exec 명령어에서 지정한 스트림 이름의 접미사와 정확히 일치해야 함
            # BANDWIDTH = 비디오 비트레이트(b:v) + 오디오 비트레이트(b:a)
            # 시청자는 해상도만 선택하므로, 스트림 이름에서 프레임레이트 정보를 제외하여 단순화
            hls_variant _1080p BANDWIDTH=3128000; # 3000k (video) + 128k (audio)
            hls_variant _720p  BANDWIDTH=2128000; # 2000k (video) + 128k (audio)
            hls_variant _480p  BANDWIDTH=1128000; # 1000k (video) + 128k (audio)
        }
    }
}

# 3. HTTP 프로토콜 처리 블록 (HLS 파일 송출 담당)
http {
    # 기본 MIME 타입 설정
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # 로그 형식 및 파일 위치 설정
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    
    # TCP 성능 최적화 옵션
    sendfile        on;
    tcp_nopush      on;
    keepalive_timeout  65;

    # HTTP 서버 정의
    server {
        # 시청자(Player)가 접속할 HTTP 포트
        listen 80;

        # =================== 헬스 체크(Health Check) 엔드포인트 [새로 추가된 부분] ===================
        location /healthz {
            # 헬스 체크 요청은 로그를 남기지 않도록 설정 (로그 파일이 지저분해지는 것을 방지)
            access_log off;

            add_header Content-Type text/html;

            # "OK"라는 텍스트와 함께 200 OK 응답을 반환
            # 이 응답을 받는 시스템은 서버가 정상 작동 중이라고 판단함
            return 200 "<h1>nginx server ok</h1>";
        }

        # ------------------- 3-1. HLS 파일 서비스 위치 -------------------
        # "/hls" 라는 URL 경로로 요청이 들어올 때 처리할 규칙
        location /hls {
            # HLS 파일들이 저장된 실제 서버 디렉토리 경로 지정
            # rtmp 블록의 hls_path 설정과 연관됨
            root /tmp;

            # HLS 파일에 대한 브라우저 캐시 비활성화 (라이브 스트리밍이므로)
            add_header Cache-Control no-cache;

            # ------------------- 3-2. CORS 설정 (매우 중요) ----------------
            # 웹 브라우저에서 다른 도메인의 플레이어가 스트림을 재생할 수 있도록 허용
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;

            # 브라우저의 OPTIONS 사전 요청(preflight)에 대한 처리
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # ------------------- 3-3. HLS 파일 MIME 타입 설정 --------------
            # .m3u8, .ts 파일 확장자에 맞는 정확한 Content-Type을 지정
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
        }
    }
}
