# alfg/nginx-rtmp 최적화 설정 파일
daemon off;
error_log /dev/stdout info;

# 이벤트 처리 모듈
events {
    worker_connections 1024;
    use epoll;                    # Linux 최적화
}

# RTMP 서버 설정
rtmp {
    server {
        listen 1935;                      # RTMP 입력 포트
        chunk_size 4000;                  # 네트워크 성능 최적화
        
        # ✅ 플러터 앱 호환을 위한 live 애플리케이션
        application live {
            live on;                      # 라이브 스트리밍 활성화
            
            # ✅ FFmpeg 호환성을 위한 올바른 권한 설정
            allow play 127.0.0.1;         # FFmpeg(로컬호스트)만 재생 허용
            deny play all;                # 외부 클라이언트 직접 재생 차단

            # ✅ [핵심] 스트림 발행 시, 아래 URL로 인증 요청을 보냅니다.
            # 백엔드가 2xx 응답을 주면 스트림을 허용하고, 아니면 연결을 끊습니다.
            # ❗아래의 코드 스프링이 실행중일때만 사용해주세요
            # on_publish http://192.168.0.31:8080/rtmp/on-publish;
            
            # ✅ 다중 해상도 FFmpeg 트랜스코딩 (3개 화질: 1080p + 720p + 480p)
            exec sh -c "/usr/local/bin/ffmpeg -i rtmp://localhost:1935/live/$name -c:v libx264 -b:v 6000k -maxrate 6000k -bufsize 12000k -vf scale=1920:1080 -r 60 -g 120 -keyint_min 120 -preset fast -profile:v high -level 4.2 -c:a aac -b:a 192k -ar 44100 -ac 2 -f flv rtmp://localhost:1935/hls/${name}_1080p -c:v libx264 -b:v 4000k -maxrate 4000k -bufsize 8000k -vf scale=1280:720 -r 60 -g 120 -keyint_min 120 -preset superfast -profile:v high -level 4.2 -c:a aac -b:a 128k -ar 44100 -ac 2 -f flv rtmp://localhost:1935/hls/${name}_720p -c:v libx264 -b:v 1200k -maxrate 1200k -bufsize 2400k -vf scale=854:480 -r 30 -g 60 -keyint_min 60 -preset superfast -profile:v baseline -c:a aac -b:a 128k -ar 44100 -ac 2 -f flv rtmp://localhost:1935/hls/${name}_480p &";

            # exec가 논블로킹으로 실행되므로, 이 push가 정상적으로 실행됩니다.
            push rtmp://localhost:1935/generate_thumbnail;
        }

        # ✅ 2. 'generate_thumbnail' 앱: 썸네일 생성 전담
        application generate_thumbnail {
            live on;
            allow publish 127.0.0.1;
            deny publish all;

            # 썸네일 생성 루프 역시 '안전한 한 줄'로 작성하여 오류를 방지합니다.
            # 1시간 주기로 썸네일을 생성하고, 성공하면 curl로 스프링 서버에 알림을 보냅니다.
            exec sh -c "(while true; do /usr/local/bin/ffmpeg -i rtmp://localhost:1935/generate_thumbnail/$name -vframes 1 -vf scale=1280:720 -y /opt/data/thumbnails/${name}.jpg && curl -X PUT -H 'Content-Type: application/json' -d '\\''{\"thumbnailUrl\":\"http://192.168.0.31:8081/thumbnails/'$name'.jpg\"}'\\'' http://192.168.0.31:8080/rtmp/$name/thumbnails; sleep 3600; done) &";
        }
        
        # ✅ HLS 출력 애플리케이션 (FFmpeg 트랜스코딩 결과 수신)
        application hls {
            live on;                      # 라이브 활성화
            
            # 외부 발행 차단 (내부 FFmpeg만 허용)
            allow publish 127.0.0.1;      # 로컬호스트만 허용
            deny publish all;             # 외부 발행 차단
            
            # ✅ HLS 설정 최적화
            hls on;                       # HLS 출력 활성화
            hls_path /opt/data/hls;       # HLS 세그먼트 저장 경로
            hls_fragment 2;               # 2초 세그먼트 (안정성)
            hls_playlist_length 6;       # 6초 플레이리스트 (3개 세그먼트)
            hls_fragment_naming system;   # 시스템 기반 파일명
            hls_nested on;                # 스트림별 디렉토리 생성
            
            # ✅ 다중 화질 변형 정의 (3개 화질 포함)
            hls_variant _1080p BANDWIDTH=4192000,RESOLUTION=1920x1080;  # 최고화질 (~4.2Mbps)
            hls_variant _720p BANDWIDTH=2628000,RESOLUTION=1280x720;    # 고화질 (~2.6Mbps)
            hls_variant _480p BANDWIDTH=1328000,RESOLUTION=854x480;     # 중화질 (~1.3Mbps)

            # ✅ [핵심] 스트림이 종료될 때마다 HLS 관련 파일을 자동 삭제합니다.
            # $name 변수는 스트림 키를 나타내므로, 해당 스트림의 모든 파일을 삭제합니다.
            # 이 설정은 백엔드 DB에 영향을 주지 않고 디스크 공간만 정리합니다.
            # on_done exec rm -rf /opt/data/hls/$name;
        }
    }
}

# HTTP 서버 설정 (HLS 파일 제공)
http {
    # 기본 MIME 타입 설정
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # ✅ 성능 최적화 설정
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout 65;
    
    # ✅ 로그 설정
    access_log /dev/stdout combined;
    error_log /dev/stdout warn;
    
    server {
        listen 80;                        # HTTP 포트
        
        # ✅ HLS 스트림 제공 (CORS 설정 포함)
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;  # HLS 플레이리스트
                video/mp2t ts;                       # HLS 세그먼트
            }
            
            root /opt/data;               # alfg/nginx-rtmp 기본 경로
            
            # CORS 및 캐시 설정 (웹 플레이어 지원)
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
            add_header Access-Control-Allow-Headers Range;
        }
        
        # ✅ [최종 완성본] 썸네일 제공을 위한 최적화 및 보안 강화 설정
        location /thumbnails {
            # 썸네일 파일이 위치한 최상위 디렉토리를 지정합니다.
            # 예: /thumbnails/stream.jpg 요청은 /opt/data/thumbnails/stream.jpg 파일을 찾습니다.
            root /opt/data;
            
            # ✅ [성능 최적화] 브라우저 캐싱을 7일로 설정하여 불필요한 다운로드를 줄입니다.
            expires 7d;
            
            # ✅ [보안/호환성] 웹 앱(플러터)에서 이미지를 불러올 수 있도록 CORS 헤더를 추가합니다.
            # 'always' 옵션은 4xx, 5xx 같은 에러 응답 시에도 이 헤더를 포함시킵니다.
            add_header 'Access-Control-Allow-Origin' '*' always;
            
            # ✅ [보안 강화] 브라우저가 콘텐츠 타입을 추측하지 않도록 하여 보안을 강화합니다.
            add_header 'X-Content-Type-Options' 'nosniff';
            
            # ✅ [서버 부하 감소] 존재하지 않는 썸네일 요청에 대한 404 로그를 남기지 않습니다.
            log_not_found off;

            # ✅ [서버 부하 감소] 이 경로의 모든 성공/실패 접근 로그를 비활성화하여 I/O를 줄입니다. (선택사항)
            access_log off;
        }
        
        # ✅ 편의용 별칭 (선택사항)
        location /live {
            alias /opt/data/hls;
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }
        
        # ✅ 서버 상태 모니터링 페이지
        location /stat {
            rtmp_stat all;               # RTMP 통계 표시
            rtmp_stat_stylesheet stat.xsl;
        }
        
        # ✅ 통계 스타일시트
        location /stat.xsl {
            root /www/static;            # alfg/nginx-rtmp 기본 경로
        }
        
        # ✅ crossdomain.xml 지원 (Flash 호환성)
        location /crossdomain.xml {
            default_type text/xml;
            expires 24h;
        }
        
        # ✅ 기본 페이지
        location / {
            root /www/static;
            index index.html;
        }
    }
}
